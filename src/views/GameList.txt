<script setup lang="ts">
import { ref, watch } from 'vue'
import Games from '@/models/games'

const props = defineProps<{ params: string }>()

const loading = ref(true)
const games = ref(new Games())

const host = 'http://localhost:8000/module_c_solution'

watch(
  () => props.params,
  async (params) => {
    loading.value = true
    const res = await fetch(host + '/api/v1/games' + params)
    games.value = (await res.json()) as Games
    loading.value = false
  },
  { immediate: true }
)
</script>

<template>
  <div class="container" v-if="!loading" v-for="game in games.content" :key="game.slug">
    <div class="top">
      <div class="left">
        <h2>{{ game.title }}</h2>
        <h3>by {{ game.author }}</h3>
      </div>
      <div class="right"># scores submitted: {{ game.scoreCount }}</div>
    </div>
    <div class="bottom">
      <img :src="host + '/storage/app' + game.thumbnail?.replace(/demo-game-/, '')" />
      <p>
        {{ game.description }}
      </p>
    </div>
  </div>
  <div v-else>Loading...</div>
</template>

<style scoped>
.container {
  border: 1px black solid;
  margin-bottom: 1rem;
  padding: 1rem;
}

.top {
  display: flex;
  justify-content: space-between;
}

.top .left {
  display: flex;
  align-items: end;
}

.bottom {
  display: flex;
}

img {
  width: 300px;
  height: 200px;
  object-fit: cover;
}

p {
  flex-grow: 1;
}
</style>
